name: build

on:
  pull_request:
    branches:
    - master

env:
  kphp_root_dir: /home/kitten/kphp
  kphp_build_dir: /home/kitten/kphp/build

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: buster
            compiler: g++
            cpp: 17
            asan: off
            ubsan: off

    name: "${{matrix.os}}/${{matrix.compiler}}/c++${{matrix.cpp}}/asan=${{matrix.asan}}/ubsan=${{matrix.ubsan}}"

    steps:
    - uses: actions/checkout@v3

    - name: Cache docker image
      uses: actions/cache@v3
      id: docker-image-cache
      with:
        path: $GITHUB_WORKSPACE/kphp-build-env-${{matrix.os}}.tar
        key: docker-image-cache-${{matrix.os}}-${{ hashFiles('.github/workflows/Dockerfile.*') }}

    - name: Build docker image
      if: steps.docker-image-cache.outputs.cache-hit != 'true'
      run: docker build -f $GITHUB_WORKSPACE/.github/workflows/Dockerfile.${{matrix.os}} $GITHUB_WORKSPACE -t kphp-build-img-${{matrix.os}}

    - name: Save docker image
      if: steps.docker-image-cache.outputs.cache-hit != 'true'
      run: docker save --output $GITHUB_WORKSPACE/kphp-build-env-${{matrix.os}}.tar kphp-build-img-${{matrix.os}}

    - name: Load docker image from cache
      if: steps.docker-image-cache.outputs.cache-hit == 'true'
      run: docker load --input $GITHUB_WORKSPACE/kphp-build-env-${{matrix.os}}.tar

    - name: Test
      run: ls -la $GITHUB_WORKSPACE && docker images
